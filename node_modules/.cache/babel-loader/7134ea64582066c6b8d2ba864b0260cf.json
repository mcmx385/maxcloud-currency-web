{"ast":null,"code":"/*!\n * @license\n * chartjs-plugin-zoom\n * http://chartjs.org/\n * Version: 0.7.7\n *\n * Copyright 2020 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-plugin-zoom/blob/master/LICENSE.md\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('chart.js'), require('hammerjs')) : typeof define === 'function' && define.amd ? define(['chart.js', 'hammerjs'], factory) : (global = global || self, global.ChartZoom = factory(global.Chart, global.Hammer));\n})(this, function (Chart, Hammer) {\n  'use strict';\n\n  Chart = Chart && Object.prototype.hasOwnProperty.call(Chart, 'default') ? Chart['default'] : Chart;\n  Hammer = Hammer && Object.prototype.hasOwnProperty.call(Hammer, 'default') ? Hammer['default'] : Hammer;\n  var helpers = Chart.helpers; // Take the zoom namespace of Chart\n\n  var zoomNS = Chart.Zoom = Chart.Zoom || {}; // Where we store functions to handle different scale types\n\n  var zoomFunctions = zoomNS.zoomFunctions = zoomNS.zoomFunctions || {};\n  var panFunctions = zoomNS.panFunctions = zoomNS.panFunctions || {};\n  Chart.Zoom.defaults = Chart.defaults.global.plugins.zoom = {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      speed: 20,\n      threshold: 10\n    },\n    zoom: {\n      enabled: false,\n      mode: 'xy',\n      sensitivity: 3,\n      speed: 0.1\n    }\n  };\n\n  function resolveOptions(chart, options) {\n    var deprecatedOptions = {};\n\n    if (typeof chart.options.pan !== 'undefined') {\n      deprecatedOptions.pan = chart.options.pan;\n    }\n\n    if (typeof chart.options.zoom !== 'undefined') {\n      deprecatedOptions.zoom = chart.options.zoom;\n    }\n\n    var props = chart.$zoom;\n    options = props._options = helpers.merge({}, [options, deprecatedOptions]); // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n    // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n    // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n\n    var node = props._node;\n    var zoomEnabled = options.zoom && options.zoom.enabled;\n    var dragEnabled = options.zoom.drag;\n\n    if (zoomEnabled && !dragEnabled) {\n      node.addEventListener('wheel', props._wheelHandler);\n    } else {\n      node.removeEventListener('wheel', props._wheelHandler);\n    }\n\n    if (zoomEnabled && dragEnabled) {\n      node.addEventListener('mousedown', props._mouseDownHandler);\n      node.ownerDocument.addEventListener('mouseup', props._mouseUpHandler);\n    } else {\n      node.removeEventListener('mousedown', props._mouseDownHandler);\n      node.removeEventListener('mousemove', props._mouseMoveHandler);\n      node.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n    }\n  }\n\n  function storeOriginalOptions(chart) {\n    var originalOptions = chart.$zoom._originalOptions;\n    helpers.each(chart.scales, function (scale) {\n      if (!originalOptions[scale.id]) {\n        originalOptions[scale.id] = helpers.clone(scale.options);\n      }\n    });\n    helpers.each(originalOptions, function (opt, key) {\n      if (!chart.scales[key]) {\n        delete originalOptions[key];\n      }\n    });\n  }\n  /**\n   * @param {string} mode can be 'x', 'y' or 'xy'\n   * @param {string} dir can be 'x' or 'y'\n   * @param {Chart} chart instance of the chart in question\n   */\n\n\n  function directionEnabled(mode, dir, chart) {\n    if (mode === undefined) {\n      return true;\n    } else if (typeof mode === 'string') {\n      return mode.indexOf(dir) !== -1;\n    } else if (typeof mode === 'function') {\n      return mode({\n        chart: chart\n      }).indexOf(dir) !== -1;\n    }\n\n    return false;\n  }\n\n  function rangeMaxLimiter(zoomPanOptions, newMax) {\n    if (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMax && !helpers.isNullOrUndef(zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes])) {\n      var rangeMax = zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes];\n\n      if (newMax > rangeMax) {\n        newMax = rangeMax;\n      }\n    }\n\n    return newMax;\n  }\n\n  function rangeMinLimiter(zoomPanOptions, newMin) {\n    if (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMin && !helpers.isNullOrUndef(zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes])) {\n      var rangeMin = zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes];\n\n      if (newMin < rangeMin) {\n        newMin = rangeMin;\n      }\n    }\n\n    return newMin;\n  }\n\n  function zoomCategoryScale(scale, zoom, center, zoomOptions) {\n    var labels = scale.chart.data.labels;\n    var minIndex = scale.minIndex;\n    var lastLabelIndex = labels.length - 1;\n    var maxIndex = scale.maxIndex;\n    var sensitivity = zoomOptions.sensitivity;\n    var chartCenter = scale.isHorizontal() ? scale.left + scale.width / 2 : scale.top + scale.height / 2;\n    var centerPointer = scale.isHorizontal() ? center.x : center.y;\n    zoomNS.zoomCumulativeDelta = zoom > 1 ? zoomNS.zoomCumulativeDelta + 1 : zoomNS.zoomCumulativeDelta - 1;\n\n    if (Math.abs(zoomNS.zoomCumulativeDelta) > sensitivity) {\n      if (zoomNS.zoomCumulativeDelta < 0) {\n        if (centerPointer >= chartCenter) {\n          if (minIndex <= 0) {\n            maxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n          } else {\n            minIndex = Math.max(0, minIndex - 1);\n          }\n        } else if (centerPointer < chartCenter) {\n          if (maxIndex >= lastLabelIndex) {\n            minIndex = Math.max(0, minIndex - 1);\n          } else {\n            maxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n          }\n        }\n\n        zoomNS.zoomCumulativeDelta = 0;\n      } else if (zoomNS.zoomCumulativeDelta > 0) {\n        if (centerPointer >= chartCenter) {\n          minIndex = minIndex < maxIndex ? minIndex = Math.min(maxIndex, minIndex + 1) : minIndex;\n        } else if (centerPointer < chartCenter) {\n          maxIndex = maxIndex > minIndex ? maxIndex = Math.max(minIndex, maxIndex - 1) : maxIndex;\n        }\n\n        zoomNS.zoomCumulativeDelta = 0;\n      }\n\n      scale.options.ticks.min = rangeMinLimiter(zoomOptions, labels[minIndex]);\n      scale.options.ticks.max = rangeMaxLimiter(zoomOptions, labels[maxIndex]);\n    }\n  }\n\n  function zoomNumericalScale(scale, zoom, center, zoomOptions) {\n    var range = scale.max - scale.min;\n    var newDiff = range * (zoom - 1);\n    var centerPoint = scale.isHorizontal() ? center.x : center.y;\n    var minPercent = (scale.getValueForPixel(centerPoint) - scale.min) / range;\n    var maxPercent = 1 - minPercent;\n    var minDelta = newDiff * minPercent;\n    var maxDelta = newDiff * maxPercent;\n    scale.options.ticks.min = rangeMinLimiter(zoomOptions, scale.min + minDelta);\n    scale.options.ticks.max = rangeMaxLimiter(zoomOptions, scale.max - maxDelta);\n  }\n\n  function zoomTimeScale(scale, zoom, center, zoomOptions) {\n    zoomNumericalScale(scale, zoom, center, zoomOptions);\n    var options = scale.options;\n\n    if (options.time) {\n      if (options.time.min) {\n        options.time.min = options.ticks.min;\n      }\n\n      if (options.time.max) {\n        options.time.max = options.ticks.max;\n      }\n    }\n  }\n\n  function zoomScale(scale, zoom, center, zoomOptions) {\n    var fn = zoomFunctions[scale.type];\n\n    if (fn) {\n      fn(scale, zoom, center, zoomOptions);\n    }\n  }\n  /**\n   * @param chart The chart instance\n   * @param {number} percentZoomX The zoom percentage in the x direction\n   * @param {number} percentZoomY The zoom percentage in the y direction\n   * @param {{x: number, y: number}} focalPoint The x and y coordinates of zoom focal point. The point which doesn't change while zooming. E.g. the location of the mouse cursor when \"drag: false\"\n   * @param {string} whichAxes `xy`, 'x', or 'y'\n   * @param {number} animationDuration Duration of the animation of the redraw in milliseconds\n   */\n\n\n  function doZoom(chart, percentZoomX, percentZoomY, focalPoint, whichAxes, animationDuration) {\n    var ca = chart.chartArea;\n\n    if (!focalPoint) {\n      focalPoint = {\n        x: (ca.left + ca.right) / 2,\n        y: (ca.top + ca.bottom) / 2\n      };\n    }\n\n    var zoomOptions = chart.$zoom._options.zoom;\n\n    if (zoomOptions.enabled) {\n      storeOriginalOptions(chart); // Do the zoom here\n\n      var zoomMode = typeof zoomOptions.mode === 'function' ? zoomOptions.mode({\n        chart: chart\n      }) : zoomOptions.mode; // Which axe should be modified when figers were used.\n\n      var _whichAxes;\n\n      if (zoomMode === 'xy' && whichAxes !== undefined) {\n        // based on fingers positions\n        _whichAxes = whichAxes;\n      } else {\n        // no effect\n        _whichAxes = 'xy';\n      }\n\n      helpers.each(chart.scales, function (scale) {\n        if (scale.isHorizontal() && directionEnabled(zoomMode, 'x', chart) && directionEnabled(_whichAxes, 'x', chart)) {\n          zoomOptions.scaleAxes = 'x';\n          zoomScale(scale, percentZoomX, focalPoint, zoomOptions);\n        } else if (!scale.isHorizontal() && directionEnabled(zoomMode, 'y', chart) && directionEnabled(_whichAxes, 'y', chart)) {\n          // Do Y zoom\n          zoomOptions.scaleAxes = 'y';\n          zoomScale(scale, percentZoomY, focalPoint, zoomOptions);\n        }\n      });\n\n      if (animationDuration) {\n        chart.update({\n          duration: animationDuration,\n          easing: 'easeOutQuad'\n        });\n      } else {\n        chart.update(0);\n      }\n\n      if (typeof zoomOptions.onZoom === 'function') {\n        zoomOptions.onZoom({\n          chart: chart\n        });\n      }\n    }\n  }\n\n  function panCategoryScale(scale, delta, panOptions) {\n    var labels = scale.chart.data.labels;\n    var lastLabelIndex = labels.length - 1;\n    var offsetAmt = Math.max(scale.ticks.length, 1);\n    var panSpeed = panOptions.speed;\n    var minIndex = scale.minIndex;\n    var step = Math.round(scale.width / (offsetAmt * panSpeed));\n    var maxIndex;\n    zoomNS.panCumulativeDelta += delta;\n    minIndex = zoomNS.panCumulativeDelta > step ? Math.max(0, minIndex - 1) : zoomNS.panCumulativeDelta < -step ? Math.min(lastLabelIndex - offsetAmt + 1, minIndex + 1) : minIndex;\n    zoomNS.panCumulativeDelta = minIndex !== scale.minIndex ? 0 : zoomNS.panCumulativeDelta;\n    maxIndex = Math.min(lastLabelIndex, minIndex + offsetAmt - 1);\n    scale.options.ticks.min = rangeMinLimiter(panOptions, labels[minIndex]);\n    scale.options.ticks.max = rangeMaxLimiter(panOptions, labels[maxIndex]);\n  }\n\n  function panNumericalScale(scale, delta, panOptions) {\n    var tickOpts = scale.options.ticks;\n    var prevStart = scale.min;\n    var prevEnd = scale.max;\n    var newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart) - delta);\n    var newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd) - delta); // The time scale returns date objects so convert to numbers. Can remove at Chart.js v3\n\n    newMin = newMin.valueOf ? newMin.valueOf() : newMin;\n    newMax = newMax.valueOf ? newMax.valueOf() : newMax;\n    var rangeMin = newMin;\n    var rangeMax = newMax;\n    var diff;\n\n    if (panOptions.scaleAxes && panOptions.rangeMin && !helpers.isNullOrUndef(panOptions.rangeMin[panOptions.scaleAxes])) {\n      rangeMin = panOptions.rangeMin[panOptions.scaleAxes];\n    }\n\n    if (panOptions.scaleAxes && panOptions.rangeMax && !helpers.isNullOrUndef(panOptions.rangeMax[panOptions.scaleAxes])) {\n      rangeMax = panOptions.rangeMax[panOptions.scaleAxes];\n    }\n\n    if (newMin >= rangeMin && newMax <= rangeMax) {\n      tickOpts.min = newMin;\n      tickOpts.max = newMax;\n    } else if (newMin < rangeMin) {\n      diff = prevStart - rangeMin;\n      tickOpts.min = rangeMin;\n      tickOpts.max = prevEnd - diff;\n    } else if (newMax > rangeMax) {\n      diff = rangeMax - prevEnd;\n      tickOpts.max = rangeMax;\n      tickOpts.min = prevStart + diff;\n    }\n  }\n\n  function panTimeScale(scale, delta, panOptions) {\n    panNumericalScale(scale, delta, panOptions);\n    var options = scale.options;\n\n    if (options.time) {\n      if (options.time.min) {\n        options.time.min = options.ticks.min;\n      }\n\n      if (options.time.max) {\n        options.time.max = options.ticks.max;\n      }\n    }\n  }\n\n  function panScale(scale, delta, panOptions) {\n    var fn = panFunctions[scale.type];\n\n    if (fn) {\n      fn(scale, delta, panOptions);\n    }\n  }\n\n  function doPan(chartInstance, deltaX, deltaY) {\n    storeOriginalOptions(chartInstance);\n    var panOptions = chartInstance.$zoom._options.pan;\n\n    if (panOptions.enabled) {\n      var panMode = typeof panOptions.mode === 'function' ? panOptions.mode({\n        chart: chartInstance\n      }) : panOptions.mode;\n      helpers.each(chartInstance.scales, function (scale) {\n        if (scale.isHorizontal() && directionEnabled(panMode, 'x', chartInstance) && deltaX !== 0) {\n          panOptions.scaleAxes = 'x';\n          panScale(scale, deltaX, panOptions);\n        } else if (!scale.isHorizontal() && directionEnabled(panMode, 'y', chartInstance) && deltaY !== 0) {\n          panOptions.scaleAxes = 'y';\n          panScale(scale, deltaY, panOptions);\n        }\n      });\n      chartInstance.update(0);\n\n      if (typeof panOptions.onPan === 'function') {\n        panOptions.onPan({\n          chart: chartInstance\n        });\n      }\n    }\n  }\n\n  function getXAxis(chartInstance) {\n    var scales = chartInstance.scales;\n    var scaleIds = Object.keys(scales);\n\n    for (var i = 0; i < scaleIds.length; i++) {\n      var scale = scales[scaleIds[i]];\n\n      if (scale.isHorizontal()) {\n        return scale;\n      }\n    }\n  }\n\n  function getYAxis(chartInstance) {\n    var scales = chartInstance.scales;\n    var scaleIds = Object.keys(scales);\n\n    for (var i = 0; i < scaleIds.length; i++) {\n      var scale = scales[scaleIds[i]];\n\n      if (!scale.isHorizontal()) {\n        return scale;\n      }\n    }\n  } // Store these for later\n\n\n  zoomNS.zoomFunctions.category = zoomCategoryScale;\n  zoomNS.zoomFunctions.time = zoomTimeScale;\n  zoomNS.zoomFunctions.linear = zoomNumericalScale;\n  zoomNS.zoomFunctions.logarithmic = zoomNumericalScale;\n  zoomNS.panFunctions.category = panCategoryScale;\n  zoomNS.panFunctions.time = panTimeScale;\n  zoomNS.panFunctions.linear = panNumericalScale;\n  zoomNS.panFunctions.logarithmic = panNumericalScale; // Globals for category pan and zoom\n\n  zoomNS.panCumulativeDelta = 0;\n  zoomNS.zoomCumulativeDelta = 0; // Chartjs Zoom Plugin\n\n  var zoomPlugin = {\n    id: 'zoom',\n    afterInit: function (chartInstance) {\n      chartInstance.resetZoom = function () {\n        storeOriginalOptions(chartInstance);\n        var originalOptions = chartInstance.$zoom._originalOptions;\n        helpers.each(chartInstance.scales, function (scale) {\n          var timeOptions = scale.options.time;\n          var tickOptions = scale.options.ticks;\n\n          if (originalOptions[scale.id]) {\n            if (timeOptions) {\n              timeOptions.min = originalOptions[scale.id].time.min;\n              timeOptions.max = originalOptions[scale.id].time.max;\n            }\n\n            if (tickOptions) {\n              tickOptions.min = originalOptions[scale.id].ticks.min;\n              tickOptions.max = originalOptions[scale.id].ticks.max;\n            }\n          } else {\n            if (timeOptions) {\n              delete timeOptions.min;\n              delete timeOptions.max;\n            }\n\n            if (tickOptions) {\n              delete tickOptions.min;\n              delete tickOptions.max;\n            }\n          }\n        });\n        chartInstance.update();\n      };\n    },\n    beforeUpdate: function (chart, options) {\n      resolveOptions(chart, options);\n    },\n    beforeInit: function (chartInstance, pluginOptions) {\n      chartInstance.$zoom = {\n        _originalOptions: {}\n      };\n      var node = chartInstance.$zoom._node = chartInstance.ctx.canvas;\n      resolveOptions(chartInstance, pluginOptions);\n      var options = chartInstance.$zoom._options;\n      var panThreshold = options.pan && options.pan.threshold;\n\n      chartInstance.$zoom._mouseDownHandler = function (event) {\n        node.addEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n        chartInstance.$zoom._dragZoomStart = event;\n      };\n\n      chartInstance.$zoom._mouseMoveHandler = function (event) {\n        if (chartInstance.$zoom._dragZoomStart) {\n          chartInstance.$zoom._dragZoomEnd = event;\n          chartInstance.update(0);\n        }\n      };\n\n      chartInstance.$zoom._mouseUpHandler = function (event) {\n        if (!chartInstance.$zoom._dragZoomStart) {\n          return;\n        }\n\n        node.removeEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n        var beginPoint = chartInstance.$zoom._dragZoomStart;\n        var offsetX = beginPoint.target.getBoundingClientRect().left;\n        var startX = Math.min(beginPoint.clientX, event.clientX) - offsetX;\n        var endX = Math.max(beginPoint.clientX, event.clientX) - offsetX;\n        var offsetY = beginPoint.target.getBoundingClientRect().top;\n        var startY = Math.min(beginPoint.clientY, event.clientY) - offsetY;\n        var endY = Math.max(beginPoint.clientY, event.clientY) - offsetY;\n        var dragDistanceX = endX - startX;\n        var dragDistanceY = endY - startY; // Remove drag start and end before chart update to stop drawing selected area\n\n        chartInstance.$zoom._dragZoomStart = null;\n        chartInstance.$zoom._dragZoomEnd = null;\n        var zoomThreshold = options.zoom && options.zoom.threshold || 0;\n\n        if (dragDistanceX <= zoomThreshold && dragDistanceY <= zoomThreshold) {\n          return;\n        }\n\n        var chartArea = chartInstance.chartArea;\n        var zoomOptions = chartInstance.$zoom._options.zoom;\n        var chartDistanceX = chartArea.right - chartArea.left;\n        var xEnabled = directionEnabled(zoomOptions.mode, 'x', chartInstance);\n        var zoomX = xEnabled && dragDistanceX ? 1 + (chartDistanceX - dragDistanceX) / chartDistanceX : 1;\n        var chartDistanceY = chartArea.bottom - chartArea.top;\n        var yEnabled = directionEnabled(zoomOptions.mode, 'y', chartInstance);\n        var zoomY = yEnabled && dragDistanceY ? 1 + (chartDistanceY - dragDistanceY) / chartDistanceY : 1;\n        doZoom(chartInstance, zoomX, zoomY, {\n          x: (startX - chartArea.left) / (1 - dragDistanceX / chartDistanceX) + chartArea.left,\n          y: (startY - chartArea.top) / (1 - dragDistanceY / chartDistanceY) + chartArea.top\n        }, undefined, zoomOptions.drag.animationDuration);\n\n        if (typeof zoomOptions.onZoomComplete === 'function') {\n          zoomOptions.onZoomComplete({\n            chart: chartInstance\n          });\n        }\n      };\n\n      var _scrollTimeout = null;\n\n      chartInstance.$zoom._wheelHandler = function (event) {\n        // Prevent the event from triggering the default behavior (eg. Content scrolling).\n        if (event.cancelable) {\n          event.preventDefault();\n        } // Firefox always fires the wheel event twice:\n        // First without the delta and right after that once with the delta properties.\n\n\n        if (typeof event.deltaY === 'undefined') {\n          return;\n        }\n\n        var rect = event.target.getBoundingClientRect();\n        var offsetX = event.clientX - rect.left;\n        var offsetY = event.clientY - rect.top;\n        var center = {\n          x: offsetX,\n          y: offsetY\n        };\n        var zoomOptions = chartInstance.$zoom._options.zoom;\n        var speedPercent = zoomOptions.speed;\n\n        if (event.deltaY >= 0) {\n          speedPercent = -speedPercent;\n        }\n\n        doZoom(chartInstance, 1 + speedPercent, 1 + speedPercent, center);\n        clearTimeout(_scrollTimeout);\n        _scrollTimeout = setTimeout(function () {\n          if (typeof zoomOptions.onZoomComplete === 'function') {\n            zoomOptions.onZoomComplete({\n              chart: chartInstance\n            });\n          }\n        }, 250);\n      };\n\n      if (Hammer) {\n        var mc = new Hammer.Manager(node);\n        mc.add(new Hammer.Pinch());\n        mc.add(new Hammer.Pan({\n          threshold: panThreshold\n        })); // Hammer reports the total scaling. We need the incremental amount\n\n        var currentPinchScaling;\n\n        var handlePinch = function (e) {\n          var diff = 1 / currentPinchScaling * e.scale;\n          var rect = e.target.getBoundingClientRect();\n          var offsetX = e.center.x - rect.left;\n          var offsetY = e.center.y - rect.top;\n          var center = {\n            x: offsetX,\n            y: offsetY\n          }; // fingers position difference\n\n          var x = Math.abs(e.pointers[0].clientX - e.pointers[1].clientX);\n          var y = Math.abs(e.pointers[0].clientY - e.pointers[1].clientY); // diagonal fingers will change both (xy) axes\n\n          var p = x / y;\n          var xy;\n\n          if (p > 0.3 && p < 1.7) {\n            xy = 'xy';\n          } else if (x > y) {\n            xy = 'x'; // x axis\n          } else {\n            xy = 'y'; // y axis\n          }\n\n          doZoom(chartInstance, diff, diff, center, xy);\n          var zoomOptions = chartInstance.$zoom._options.zoom;\n\n          if (typeof zoomOptions.onZoomComplete === 'function') {\n            zoomOptions.onZoomComplete({\n              chart: chartInstance\n            });\n          } // Keep track of overall scale\n\n\n          currentPinchScaling = e.scale;\n        };\n\n        mc.on('pinchstart', function () {\n          currentPinchScaling = 1; // reset tracker\n        });\n        mc.on('pinch', handlePinch);\n        mc.on('pinchend', function (e) {\n          handlePinch(e);\n          currentPinchScaling = null; // reset\n\n          zoomNS.zoomCumulativeDelta = 0;\n        });\n        var currentDeltaX = null;\n        var currentDeltaY = null;\n        var panning = false;\n\n        var handlePan = function (e) {\n          if (currentDeltaX !== null && currentDeltaY !== null) {\n            panning = true;\n            var deltaX = e.deltaX - currentDeltaX;\n            var deltaY = e.deltaY - currentDeltaY;\n            currentDeltaX = e.deltaX;\n            currentDeltaY = e.deltaY;\n            doPan(chartInstance, deltaX, deltaY);\n          }\n        };\n\n        mc.on('panstart', function (e) {\n          currentDeltaX = 0;\n          currentDeltaY = 0;\n          handlePan(e);\n        });\n        mc.on('panmove', handlePan);\n        mc.on('panend', function () {\n          currentDeltaX = null;\n          currentDeltaY = null;\n          zoomNS.panCumulativeDelta = 0;\n          setTimeout(function () {\n            panning = false;\n          }, 500);\n          var panOptions = chartInstance.$zoom._options.pan;\n\n          if (typeof panOptions.onPanComplete === 'function') {\n            panOptions.onPanComplete({\n              chart: chartInstance\n            });\n          }\n        });\n\n        chartInstance.$zoom._ghostClickHandler = function (e) {\n          if (panning && e.cancelable) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n        };\n\n        node.addEventListener('click', chartInstance.$zoom._ghostClickHandler);\n        chartInstance._mc = mc;\n      }\n    },\n    beforeDatasetsDraw: function (chartInstance) {\n      var ctx = chartInstance.ctx;\n\n      if (chartInstance.$zoom._dragZoomEnd) {\n        var xAxis = getXAxis(chartInstance);\n        var yAxis = getYAxis(chartInstance);\n        var beginPoint = chartInstance.$zoom._dragZoomStart;\n        var endPoint = chartInstance.$zoom._dragZoomEnd;\n        var startX = xAxis.left;\n        var endX = xAxis.right;\n        var startY = yAxis.top;\n        var endY = yAxis.bottom;\n\n        if (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'x', chartInstance)) {\n          var offsetX = beginPoint.target.getBoundingClientRect().left;\n          startX = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n          endX = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n        }\n\n        if (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'y', chartInstance)) {\n          var offsetY = beginPoint.target.getBoundingClientRect().top;\n          startY = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n          endY = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n        }\n\n        var rectWidth = endX - startX;\n        var rectHeight = endY - startY;\n        var dragOptions = chartInstance.$zoom._options.zoom.drag;\n        ctx.save();\n        ctx.beginPath();\n        ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n        ctx.fillRect(startX, startY, rectWidth, rectHeight);\n\n        if (dragOptions.borderWidth > 0) {\n          ctx.lineWidth = dragOptions.borderWidth;\n          ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n          ctx.strokeRect(startX, startY, rectWidth, rectHeight);\n        }\n\n        ctx.restore();\n      }\n    },\n    destroy: function (chartInstance) {\n      if (!chartInstance.$zoom) {\n        return;\n      }\n\n      var props = chartInstance.$zoom;\n      var node = props._node;\n      node.removeEventListener('mousedown', props._mouseDownHandler);\n      node.removeEventListener('mousemove', props._mouseMoveHandler);\n      node.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n      node.removeEventListener('wheel', props._wheelHandler);\n      node.removeEventListener('click', props._ghostClickHandler);\n      delete chartInstance.$zoom;\n      var mc = chartInstance._mc;\n\n      if (mc) {\n        mc.remove('pinchstart');\n        mc.remove('pinch');\n        mc.remove('pinchend');\n        mc.remove('panstart');\n        mc.remove('pan');\n        mc.remove('panend');\n        mc.destroy();\n      }\n    }\n  };\n  Chart.plugins.register(zoomPlugin);\n  return zoomPlugin;\n});","map":{"version":3,"sources":["D:/Files/OneDrive/code/lang/react/currency/node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.js"],"names":["global","factory","exports","module","require","define","amd","self","ChartZoom","Chart","Hammer","Object","prototype","hasOwnProperty","call","helpers","zoomNS","Zoom","zoomFunctions","panFunctions","defaults","plugins","zoom","pan","enabled","mode","speed","threshold","sensitivity","resolveOptions","chart","options","deprecatedOptions","props","$zoom","_options","merge","node","_node","zoomEnabled","dragEnabled","drag","addEventListener","_wheelHandler","removeEventListener","_mouseDownHandler","ownerDocument","_mouseUpHandler","_mouseMoveHandler","storeOriginalOptions","originalOptions","_originalOptions","each","scales","scale","id","clone","opt","key","directionEnabled","dir","undefined","indexOf","rangeMaxLimiter","zoomPanOptions","newMax","scaleAxes","rangeMax","isNullOrUndef","rangeMinLimiter","newMin","rangeMin","zoomCategoryScale","center","zoomOptions","labels","data","minIndex","lastLabelIndex","length","maxIndex","chartCenter","isHorizontal","left","width","top","height","centerPointer","x","y","zoomCumulativeDelta","Math","abs","min","max","ticks","zoomNumericalScale","range","newDiff","centerPoint","minPercent","getValueForPixel","maxPercent","minDelta","maxDelta","zoomTimeScale","time","zoomScale","fn","type","doZoom","percentZoomX","percentZoomY","focalPoint","whichAxes","animationDuration","ca","chartArea","right","bottom","zoomMode","_whichAxes","update","duration","easing","onZoom","panCategoryScale","delta","panOptions","offsetAmt","panSpeed","step","round","panCumulativeDelta","panNumericalScale","tickOpts","prevStart","prevEnd","getPixelForValue","valueOf","diff","panTimeScale","panScale","doPan","chartInstance","deltaX","deltaY","panMode","onPan","getXAxis","scaleIds","keys","i","getYAxis","category","linear","logarithmic","zoomPlugin","afterInit","resetZoom","timeOptions","tickOptions","beforeUpdate","beforeInit","pluginOptions","ctx","canvas","panThreshold","event","_dragZoomStart","_dragZoomEnd","beginPoint","offsetX","target","getBoundingClientRect","startX","clientX","endX","offsetY","startY","clientY","endY","dragDistanceX","dragDistanceY","zoomThreshold","chartDistanceX","xEnabled","zoomX","chartDistanceY","yEnabled","zoomY","onZoomComplete","_scrollTimeout","cancelable","preventDefault","rect","speedPercent","clearTimeout","setTimeout","mc","Manager","add","Pinch","Pan","currentPinchScaling","handlePinch","e","pointers","p","xy","on","currentDeltaX","currentDeltaY","panning","handlePan","onPanComplete","_ghostClickHandler","stopImmediatePropagation","_mc","beforeDatasetsDraw","xAxis","yAxis","endPoint","rectWidth","rectHeight","dragOptions","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","destroy","remove","register"],"mappings":"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","sourcesContent":["/*!\n * @license\n * chartjs-plugin-zoom\n * http://chartjs.org/\n * Version: 0.7.7\n *\n * Copyright 2020 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-plugin-zoom/blob/master/LICENSE.md\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('chart.js'), require('hammerjs')) :\ntypeof define === 'function' && define.amd ? define(['chart.js', 'hammerjs'], factory) :\n(global = global || self, global.ChartZoom = factory(global.Chart, global.Hammer));\n}(this, (function (Chart, Hammer) { 'use strict';\n\nChart = Chart && Object.prototype.hasOwnProperty.call(Chart, 'default') ? Chart['default'] : Chart;\nHammer = Hammer && Object.prototype.hasOwnProperty.call(Hammer, 'default') ? Hammer['default'] : Hammer;\n\nvar helpers = Chart.helpers;\n\n// Take the zoom namespace of Chart\nvar zoomNS = Chart.Zoom = Chart.Zoom || {};\n\n// Where we store functions to handle different scale types\nvar zoomFunctions = zoomNS.zoomFunctions = zoomNS.zoomFunctions || {};\nvar panFunctions = zoomNS.panFunctions = zoomNS.panFunctions || {};\n\nChart.Zoom.defaults = Chart.defaults.global.plugins.zoom = {\n\tpan: {\n\t\tenabled: false,\n\t\tmode: 'xy',\n\t\tspeed: 20,\n\t\tthreshold: 10\n\t},\n\tzoom: {\n\t\tenabled: false,\n\t\tmode: 'xy',\n\t\tsensitivity: 3,\n\t\tspeed: 0.1\n\t}\n};\n\nfunction resolveOptions(chart, options) {\n\tvar deprecatedOptions = {};\n\tif (typeof chart.options.pan !== 'undefined') {\n\t\tdeprecatedOptions.pan = chart.options.pan;\n\t}\n\tif (typeof chart.options.zoom !== 'undefined') {\n\t\tdeprecatedOptions.zoom = chart.options.zoom;\n\t}\n\tvar props = chart.$zoom;\n\toptions = props._options = helpers.merge({}, [options, deprecatedOptions]);\n\n\t// Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n\t// We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n\t// and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n\tvar node = props._node;\n\tvar zoomEnabled = options.zoom && options.zoom.enabled;\n\tvar dragEnabled = options.zoom.drag;\n\tif (zoomEnabled && !dragEnabled) {\n\t\tnode.addEventListener('wheel', props._wheelHandler);\n\t} else {\n\t\tnode.removeEventListener('wheel', props._wheelHandler);\n\t}\n\tif (zoomEnabled && dragEnabled) {\n\t\tnode.addEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.ownerDocument.addEventListener('mouseup', props._mouseUpHandler);\n\t} else {\n\t\tnode.removeEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.removeEventListener('mousemove', props._mouseMoveHandler);\n\t\tnode.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n\t}\n}\n\nfunction storeOriginalOptions(chart) {\n\tvar originalOptions = chart.$zoom._originalOptions;\n\thelpers.each(chart.scales, function(scale) {\n\t\tif (!originalOptions[scale.id]) {\n\t\t\toriginalOptions[scale.id] = helpers.clone(scale.options);\n\t\t}\n\t});\n\thelpers.each(originalOptions, function(opt, key) {\n\t\tif (!chart.scales[key]) {\n\t\t\tdelete originalOptions[key];\n\t\t}\n\t});\n}\n\n/**\n * @param {string} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {Chart} chart instance of the chart in question\n */\nfunction directionEnabled(mode, dir, chart) {\n\tif (mode === undefined) {\n\t\treturn true;\n\t} else if (typeof mode === 'string') {\n\t\treturn mode.indexOf(dir) !== -1;\n\t} else if (typeof mode === 'function') {\n\t\treturn mode({chart: chart}).indexOf(dir) !== -1;\n\t}\n\n\treturn false;\n}\n\nfunction rangeMaxLimiter(zoomPanOptions, newMax) {\n\tif (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMax &&\n\t\t\t!helpers.isNullOrUndef(zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes])) {\n\t\tvar rangeMax = zoomPanOptions.rangeMax[zoomPanOptions.scaleAxes];\n\t\tif (newMax > rangeMax) {\n\t\t\tnewMax = rangeMax;\n\t\t}\n\t}\n\treturn newMax;\n}\n\nfunction rangeMinLimiter(zoomPanOptions, newMin) {\n\tif (zoomPanOptions.scaleAxes && zoomPanOptions.rangeMin &&\n\t\t\t!helpers.isNullOrUndef(zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes])) {\n\t\tvar rangeMin = zoomPanOptions.rangeMin[zoomPanOptions.scaleAxes];\n\t\tif (newMin < rangeMin) {\n\t\t\tnewMin = rangeMin;\n\t\t}\n\t}\n\treturn newMin;\n}\n\nfunction zoomCategoryScale(scale, zoom, center, zoomOptions) {\n\tvar labels = scale.chart.data.labels;\n\tvar minIndex = scale.minIndex;\n\tvar lastLabelIndex = labels.length - 1;\n\tvar maxIndex = scale.maxIndex;\n\tvar sensitivity = zoomOptions.sensitivity;\n\tvar chartCenter = scale.isHorizontal() ? scale.left + (scale.width / 2) : scale.top + (scale.height / 2);\n\tvar centerPointer = scale.isHorizontal() ? center.x : center.y;\n\n\tzoomNS.zoomCumulativeDelta = zoom > 1 ? zoomNS.zoomCumulativeDelta + 1 : zoomNS.zoomCumulativeDelta - 1;\n\n\tif (Math.abs(zoomNS.zoomCumulativeDelta) > sensitivity) {\n\t\tif (zoomNS.zoomCumulativeDelta < 0) {\n\t\t\tif (centerPointer >= chartCenter) {\n\t\t\t\tif (minIndex <= 0) {\n\t\t\t\t\tmaxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n\t\t\t\t} else {\n\t\t\t\t\tminIndex = Math.max(0, minIndex - 1);\n\t\t\t\t}\n\t\t\t} else if (centerPointer < chartCenter) {\n\t\t\t\tif (maxIndex >= lastLabelIndex) {\n\t\t\t\t\tminIndex = Math.max(0, minIndex - 1);\n\t\t\t\t} else {\n\t\t\t\t\tmaxIndex = Math.min(lastLabelIndex, maxIndex + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t} else if (zoomNS.zoomCumulativeDelta > 0) {\n\t\t\tif (centerPointer >= chartCenter) {\n\t\t\t\tminIndex = minIndex < maxIndex ? minIndex = Math.min(maxIndex, minIndex + 1) : minIndex;\n\t\t\t} else if (centerPointer < chartCenter) {\n\t\t\t\tmaxIndex = maxIndex > minIndex ? maxIndex = Math.max(minIndex, maxIndex - 1) : maxIndex;\n\t\t\t}\n\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t}\n\t\tscale.options.ticks.min = rangeMinLimiter(zoomOptions, labels[minIndex]);\n\t\tscale.options.ticks.max = rangeMaxLimiter(zoomOptions, labels[maxIndex]);\n\t}\n}\n\nfunction zoomNumericalScale(scale, zoom, center, zoomOptions) {\n\tvar range = scale.max - scale.min;\n\tvar newDiff = range * (zoom - 1);\n\n\tvar centerPoint = scale.isHorizontal() ? center.x : center.y;\n\tvar minPercent = (scale.getValueForPixel(centerPoint) - scale.min) / range;\n\tvar maxPercent = 1 - minPercent;\n\n\tvar minDelta = newDiff * minPercent;\n\tvar maxDelta = newDiff * maxPercent;\n\n\tscale.options.ticks.min = rangeMinLimiter(zoomOptions, scale.min + minDelta);\n\tscale.options.ticks.max = rangeMaxLimiter(zoomOptions, scale.max - maxDelta);\n}\n\nfunction zoomTimeScale(scale, zoom, center, zoomOptions) {\n\tzoomNumericalScale(scale, zoom, center, zoomOptions);\n\n\tvar options = scale.options;\n\tif (options.time) {\n\t\tif (options.time.min) {\n\t\t\toptions.time.min = options.ticks.min;\n\t\t}\n\t\tif (options.time.max) {\n\t\t\toptions.time.max = options.ticks.max;\n\t\t}\n\t}\n}\n\nfunction zoomScale(scale, zoom, center, zoomOptions) {\n\tvar fn = zoomFunctions[scale.type];\n\tif (fn) {\n\t\tfn(scale, zoom, center, zoomOptions);\n\t}\n}\n\n/**\n * @param chart The chart instance\n * @param {number} percentZoomX The zoom percentage in the x direction\n * @param {number} percentZoomY The zoom percentage in the y direction\n * @param {{x: number, y: number}} focalPoint The x and y coordinates of zoom focal point. The point which doesn't change while zooming. E.g. the location of the mouse cursor when \"drag: false\"\n * @param {string} whichAxes `xy`, 'x', or 'y'\n * @param {number} animationDuration Duration of the animation of the redraw in milliseconds\n */\nfunction doZoom(chart, percentZoomX, percentZoomY, focalPoint, whichAxes, animationDuration) {\n\tvar ca = chart.chartArea;\n\tif (!focalPoint) {\n\t\tfocalPoint = {\n\t\t\tx: (ca.left + ca.right) / 2,\n\t\t\ty: (ca.top + ca.bottom) / 2,\n\t\t};\n\t}\n\n\tvar zoomOptions = chart.$zoom._options.zoom;\n\n\tif (zoomOptions.enabled) {\n\t\tstoreOriginalOptions(chart);\n\t\t// Do the zoom here\n\t\tvar zoomMode = typeof zoomOptions.mode === 'function' ? zoomOptions.mode({chart: chart}) : zoomOptions.mode;\n\n\t\t// Which axe should be modified when figers were used.\n\t\tvar _whichAxes;\n\t\tif (zoomMode === 'xy' && whichAxes !== undefined) {\n\t\t\t// based on fingers positions\n\t\t\t_whichAxes = whichAxes;\n\t\t} else {\n\t\t\t// no effect\n\t\t\t_whichAxes = 'xy';\n\t\t}\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tif (scale.isHorizontal() && directionEnabled(zoomMode, 'x', chart) && directionEnabled(_whichAxes, 'x', chart)) {\n\t\t\t\tzoomOptions.scaleAxes = 'x';\n\t\t\t\tzoomScale(scale, percentZoomX, focalPoint, zoomOptions);\n\t\t\t} else if (!scale.isHorizontal() && directionEnabled(zoomMode, 'y', chart) && directionEnabled(_whichAxes, 'y', chart)) {\n\t\t\t\t// Do Y zoom\n\t\t\t\tzoomOptions.scaleAxes = 'y';\n\t\t\t\tzoomScale(scale, percentZoomY, focalPoint, zoomOptions);\n\t\t\t}\n\t\t});\n\n\t\tif (animationDuration) {\n\t\t\tchart.update({\n\t\t\t\tduration: animationDuration,\n\t\t\t\teasing: 'easeOutQuad',\n\t\t\t});\n\t\t} else {\n\t\t\tchart.update(0);\n\t\t}\n\n\t\tif (typeof zoomOptions.onZoom === 'function') {\n\t\t\tzoomOptions.onZoom({chart: chart});\n\t\t}\n\t}\n}\n\nfunction panCategoryScale(scale, delta, panOptions) {\n\tvar labels = scale.chart.data.labels;\n\tvar lastLabelIndex = labels.length - 1;\n\tvar offsetAmt = Math.max(scale.ticks.length, 1);\n\tvar panSpeed = panOptions.speed;\n\tvar minIndex = scale.minIndex;\n\tvar step = Math.round(scale.width / (offsetAmt * panSpeed));\n\tvar maxIndex;\n\n\tzoomNS.panCumulativeDelta += delta;\n\n\tminIndex = zoomNS.panCumulativeDelta > step ? Math.max(0, minIndex - 1) : zoomNS.panCumulativeDelta < -step ? Math.min(lastLabelIndex - offsetAmt + 1, minIndex + 1) : minIndex;\n\tzoomNS.panCumulativeDelta = minIndex !== scale.minIndex ? 0 : zoomNS.panCumulativeDelta;\n\n\tmaxIndex = Math.min(lastLabelIndex, minIndex + offsetAmt - 1);\n\n\tscale.options.ticks.min = rangeMinLimiter(panOptions, labels[minIndex]);\n\tscale.options.ticks.max = rangeMaxLimiter(panOptions, labels[maxIndex]);\n}\n\nfunction panNumericalScale(scale, delta, panOptions) {\n\tvar tickOpts = scale.options.ticks;\n\tvar prevStart = scale.min;\n\tvar prevEnd = scale.max;\n\tvar newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart) - delta);\n\tvar newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd) - delta);\n\t// The time scale returns date objects so convert to numbers. Can remove at Chart.js v3\n\tnewMin = newMin.valueOf ? newMin.valueOf() : newMin;\n\tnewMax = newMax.valueOf ? newMax.valueOf() : newMax;\n\tvar rangeMin = newMin;\n\tvar rangeMax = newMax;\n\tvar diff;\n\n\tif (panOptions.scaleAxes && panOptions.rangeMin &&\n\t\t\t!helpers.isNullOrUndef(panOptions.rangeMin[panOptions.scaleAxes])) {\n\t\trangeMin = panOptions.rangeMin[panOptions.scaleAxes];\n\t}\n\tif (panOptions.scaleAxes && panOptions.rangeMax &&\n\t\t\t!helpers.isNullOrUndef(panOptions.rangeMax[panOptions.scaleAxes])) {\n\t\trangeMax = panOptions.rangeMax[panOptions.scaleAxes];\n\t}\n\n\tif (newMin >= rangeMin && newMax <= rangeMax) {\n\t\ttickOpts.min = newMin;\n\t\ttickOpts.max = newMax;\n\t} else if (newMin < rangeMin) {\n\t\tdiff = prevStart - rangeMin;\n\t\ttickOpts.min = rangeMin;\n\t\ttickOpts.max = prevEnd - diff;\n\t} else if (newMax > rangeMax) {\n\t\tdiff = rangeMax - prevEnd;\n\t\ttickOpts.max = rangeMax;\n\t\ttickOpts.min = prevStart + diff;\n\t}\n}\n\nfunction panTimeScale(scale, delta, panOptions) {\n\tpanNumericalScale(scale, delta, panOptions);\n\n\tvar options = scale.options;\n\tif (options.time) {\n\t\tif (options.time.min) {\n\t\t\toptions.time.min = options.ticks.min;\n\t\t}\n\t\tif (options.time.max) {\n\t\t\toptions.time.max = options.ticks.max;\n\t\t}\n\t}\n}\n\nfunction panScale(scale, delta, panOptions) {\n\tvar fn = panFunctions[scale.type];\n\tif (fn) {\n\t\tfn(scale, delta, panOptions);\n\t}\n}\n\nfunction doPan(chartInstance, deltaX, deltaY) {\n\tstoreOriginalOptions(chartInstance);\n\tvar panOptions = chartInstance.$zoom._options.pan;\n\tif (panOptions.enabled) {\n\t\tvar panMode = typeof panOptions.mode === 'function' ? panOptions.mode({chart: chartInstance}) : panOptions.mode;\n\n\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\tif (scale.isHorizontal() && directionEnabled(panMode, 'x', chartInstance) && deltaX !== 0) {\n\t\t\t\tpanOptions.scaleAxes = 'x';\n\t\t\t\tpanScale(scale, deltaX, panOptions);\n\t\t\t} else if (!scale.isHorizontal() && directionEnabled(panMode, 'y', chartInstance) && deltaY !== 0) {\n\t\t\t\tpanOptions.scaleAxes = 'y';\n\t\t\t\tpanScale(scale, deltaY, panOptions);\n\t\t\t}\n\t\t});\n\n\t\tchartInstance.update(0);\n\n\t\tif (typeof panOptions.onPan === 'function') {\n\t\t\tpanOptions.onPan({chart: chartInstance});\n\t\t}\n\t}\n}\n\nfunction getXAxis(chartInstance) {\n\tvar scales = chartInstance.scales;\n\tvar scaleIds = Object.keys(scales);\n\tfor (var i = 0; i < scaleIds.length; i++) {\n\t\tvar scale = scales[scaleIds[i]];\n\n\t\tif (scale.isHorizontal()) {\n\t\t\treturn scale;\n\t\t}\n\t}\n}\n\nfunction getYAxis(chartInstance) {\n\tvar scales = chartInstance.scales;\n\tvar scaleIds = Object.keys(scales);\n\tfor (var i = 0; i < scaleIds.length; i++) {\n\t\tvar scale = scales[scaleIds[i]];\n\n\t\tif (!scale.isHorizontal()) {\n\t\t\treturn scale;\n\t\t}\n\t}\n}\n\n// Store these for later\nzoomNS.zoomFunctions.category = zoomCategoryScale;\nzoomNS.zoomFunctions.time = zoomTimeScale;\nzoomNS.zoomFunctions.linear = zoomNumericalScale;\nzoomNS.zoomFunctions.logarithmic = zoomNumericalScale;\nzoomNS.panFunctions.category = panCategoryScale;\nzoomNS.panFunctions.time = panTimeScale;\nzoomNS.panFunctions.linear = panNumericalScale;\nzoomNS.panFunctions.logarithmic = panNumericalScale;\n// Globals for category pan and zoom\nzoomNS.panCumulativeDelta = 0;\nzoomNS.zoomCumulativeDelta = 0;\n\n// Chartjs Zoom Plugin\nvar zoomPlugin = {\n\tid: 'zoom',\n\n\tafterInit: function(chartInstance) {\n\n\t\tchartInstance.resetZoom = function() {\n\t\t\tstoreOriginalOptions(chartInstance);\n\t\t\tvar originalOptions = chartInstance.$zoom._originalOptions;\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\n\t\t\t\tvar timeOptions = scale.options.time;\n\t\t\t\tvar tickOptions = scale.options.ticks;\n\n\t\t\t\tif (originalOptions[scale.id]) {\n\n\t\t\t\t\tif (timeOptions) {\n\t\t\t\t\t\ttimeOptions.min = originalOptions[scale.id].time.min;\n\t\t\t\t\t\ttimeOptions.max = originalOptions[scale.id].time.max;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOptions) {\n\t\t\t\t\t\ttickOptions.min = originalOptions[scale.id].ticks.min;\n\t\t\t\t\t\ttickOptions.max = originalOptions[scale.id].ticks.max;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tif (timeOptions) {\n\t\t\t\t\t\tdelete timeOptions.min;\n\t\t\t\t\t\tdelete timeOptions.max;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOptions) {\n\t\t\t\t\t\tdelete tickOptions.min;\n\t\t\t\t\t\tdelete tickOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t});\n\n\t\t\tchartInstance.update();\n\t\t};\n\n\t},\n\n\tbeforeUpdate: function(chart, options) {\n\t\tresolveOptions(chart, options);\n\t},\n\n\tbeforeInit: function(chartInstance, pluginOptions) {\n\t\tchartInstance.$zoom = {\n\t\t\t_originalOptions: {}\n\t\t};\n\t\tvar node = chartInstance.$zoom._node = chartInstance.ctx.canvas;\n\t\tresolveOptions(chartInstance, pluginOptions);\n\n\t\tvar options = chartInstance.$zoom._options;\n\t\tvar panThreshold = options.pan && options.pan.threshold;\n\n\t\tchartInstance.$zoom._mouseDownHandler = function(event) {\n\t\t\tnode.addEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n\t\t\tchartInstance.$zoom._dragZoomStart = event;\n\t\t};\n\n\t\tchartInstance.$zoom._mouseMoveHandler = function(event) {\n\t\t\tif (chartInstance.$zoom._dragZoomStart) {\n\t\t\t\tchartInstance.$zoom._dragZoomEnd = event;\n\t\t\t\tchartInstance.update(0);\n\t\t\t}\n\t\t};\n\n\t\tchartInstance.$zoom._mouseUpHandler = function(event) {\n\t\t\tif (!chartInstance.$zoom._dragZoomStart) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnode.removeEventListener('mousemove', chartInstance.$zoom._mouseMoveHandler);\n\n\t\t\tvar beginPoint = chartInstance.$zoom._dragZoomStart;\n\n\t\t\tvar offsetX = beginPoint.target.getBoundingClientRect().left;\n\t\t\tvar startX = Math.min(beginPoint.clientX, event.clientX) - offsetX;\n\t\t\tvar endX = Math.max(beginPoint.clientX, event.clientX) - offsetX;\n\n\t\t\tvar offsetY = beginPoint.target.getBoundingClientRect().top;\n\t\t\tvar startY = Math.min(beginPoint.clientY, event.clientY) - offsetY;\n\t\t\tvar endY = Math.max(beginPoint.clientY, event.clientY) - offsetY;\n\n\t\t\tvar dragDistanceX = endX - startX;\n\t\t\tvar dragDistanceY = endY - startY;\n\n\t\t\t// Remove drag start and end before chart update to stop drawing selected area\n\t\t\tchartInstance.$zoom._dragZoomStart = null;\n\t\t\tchartInstance.$zoom._dragZoomEnd = null;\n\n\t\t\tvar zoomThreshold = options.zoom && options.zoom.threshold || 0;\n\t\t\tif (dragDistanceX <= zoomThreshold && dragDistanceY <= zoomThreshold) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar chartArea = chartInstance.chartArea;\n\n\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\tvar chartDistanceX = chartArea.right - chartArea.left;\n\t\t\tvar xEnabled = directionEnabled(zoomOptions.mode, 'x', chartInstance);\n\t\t\tvar zoomX = xEnabled && dragDistanceX ? 1 + ((chartDistanceX - dragDistanceX) / chartDistanceX) : 1;\n\n\t\t\tvar chartDistanceY = chartArea.bottom - chartArea.top;\n\t\t\tvar yEnabled = directionEnabled(zoomOptions.mode, 'y', chartInstance);\n\t\t\tvar zoomY = yEnabled && dragDistanceY ? 1 + ((chartDistanceY - dragDistanceY) / chartDistanceY) : 1;\n\n\t\t\tdoZoom(chartInstance, zoomX, zoomY, {\n\t\t\t\tx: (startX - chartArea.left) / (1 - dragDistanceX / chartDistanceX) + chartArea.left,\n\t\t\t\ty: (startY - chartArea.top) / (1 - dragDistanceY / chartDistanceY) + chartArea.top\n\t\t\t}, undefined, zoomOptions.drag.animationDuration);\n\n\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t}\n\t\t};\n\n\t\tvar _scrollTimeout = null;\n\t\tchartInstance.$zoom._wheelHandler = function(event) {\n\t\t\t// Prevent the event from triggering the default behavior (eg. Content scrolling).\n\t\t\tif (event.cancelable) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\t// Firefox always fires the wheel event twice:\n\t\t\t// First without the delta and right after that once with the delta properties.\n\t\t\tif (typeof event.deltaY === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar rect = event.target.getBoundingClientRect();\n\t\t\tvar offsetX = event.clientX - rect.left;\n\t\t\tvar offsetY = event.clientY - rect.top;\n\n\t\t\tvar center = {\n\t\t\t\tx: offsetX,\n\t\t\t\ty: offsetY\n\t\t\t};\n\n\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\tvar speedPercent = zoomOptions.speed;\n\n\t\t\tif (event.deltaY >= 0) {\n\t\t\t\tspeedPercent = -speedPercent;\n\t\t\t}\n\t\t\tdoZoom(chartInstance, 1 + speedPercent, 1 + speedPercent, center);\n\n\t\t\tclearTimeout(_scrollTimeout);\n\t\t\t_scrollTimeout = setTimeout(function() {\n\t\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t\t}\n\t\t\t}, 250);\n\t\t};\n\n\t\tif (Hammer) {\n\t\t\tvar mc = new Hammer.Manager(node);\n\t\t\tmc.add(new Hammer.Pinch());\n\t\t\tmc.add(new Hammer.Pan({\n\t\t\t\tthreshold: panThreshold\n\t\t\t}));\n\n\t\t\t// Hammer reports the total scaling. We need the incremental amount\n\t\t\tvar currentPinchScaling;\n\t\t\tvar handlePinch = function(e) {\n\t\t\t\tvar diff = 1 / (currentPinchScaling) * e.scale;\n\t\t\t\tvar rect = e.target.getBoundingClientRect();\n\t\t\t\tvar offsetX = e.center.x - rect.left;\n\t\t\t\tvar offsetY = e.center.y - rect.top;\n\t\t\t\tvar center = {\n\t\t\t\t\tx: offsetX,\n\t\t\t\t\ty: offsetY\n\t\t\t\t};\n\n\t\t\t\t// fingers position difference\n\t\t\t\tvar x = Math.abs(e.pointers[0].clientX - e.pointers[1].clientX);\n\t\t\t\tvar y = Math.abs(e.pointers[0].clientY - e.pointers[1].clientY);\n\n\t\t\t\t// diagonal fingers will change both (xy) axes\n\t\t\t\tvar p = x / y;\n\t\t\t\tvar xy;\n\t\t\t\tif (p > 0.3 && p < 1.7) {\n\t\t\t\t\txy = 'xy';\n\t\t\t\t} else if (x > y) {\n\t\t\t\t\txy = 'x'; // x axis\n\t\t\t\t} else {\n\t\t\t\t\txy = 'y'; // y axis\n\t\t\t\t}\n\n\t\t\t\tdoZoom(chartInstance, diff, diff, center, xy);\n\n\t\t\t\tvar zoomOptions = chartInstance.$zoom._options.zoom;\n\t\t\t\tif (typeof zoomOptions.onZoomComplete === 'function') {\n\t\t\t\t\tzoomOptions.onZoomComplete({chart: chartInstance});\n\t\t\t\t}\n\n\t\t\t\t// Keep track of overall scale\n\t\t\t\tcurrentPinchScaling = e.scale;\n\t\t\t};\n\n\t\t\tmc.on('pinchstart', function() {\n\t\t\t\tcurrentPinchScaling = 1; // reset tracker\n\t\t\t});\n\t\t\tmc.on('pinch', handlePinch);\n\t\t\tmc.on('pinchend', function(e) {\n\t\t\t\thandlePinch(e);\n\t\t\t\tcurrentPinchScaling = null; // reset\n\t\t\t\tzoomNS.zoomCumulativeDelta = 0;\n\t\t\t});\n\n\t\t\tvar currentDeltaX = null;\n\t\t\tvar currentDeltaY = null;\n\t\t\tvar panning = false;\n\t\t\tvar handlePan = function(e) {\n\t\t\t\tif (currentDeltaX !== null && currentDeltaY !== null) {\n\t\t\t\t\tpanning = true;\n\t\t\t\t\tvar deltaX = e.deltaX - currentDeltaX;\n\t\t\t\t\tvar deltaY = e.deltaY - currentDeltaY;\n\t\t\t\t\tcurrentDeltaX = e.deltaX;\n\t\t\t\t\tcurrentDeltaY = e.deltaY;\n\t\t\t\t\tdoPan(chartInstance, deltaX, deltaY);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmc.on('panstart', function(e) {\n\t\t\t\tcurrentDeltaX = 0;\n\t\t\t\tcurrentDeltaY = 0;\n\t\t\t\thandlePan(e);\n\t\t\t});\n\t\t\tmc.on('panmove', handlePan);\n\t\t\tmc.on('panend', function() {\n\t\t\t\tcurrentDeltaX = null;\n\t\t\t\tcurrentDeltaY = null;\n\t\t\t\tzoomNS.panCumulativeDelta = 0;\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tpanning = false;\n\t\t\t\t}, 500);\n\n\t\t\t\tvar panOptions = chartInstance.$zoom._options.pan;\n\t\t\t\tif (typeof panOptions.onPanComplete === 'function') {\n\t\t\t\t\tpanOptions.onPanComplete({chart: chartInstance});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchartInstance.$zoom._ghostClickHandler = function(e) {\n\t\t\t\tif (panning && e.cancelable) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t};\n\t\t\tnode.addEventListener('click', chartInstance.$zoom._ghostClickHandler);\n\n\t\t\tchartInstance._mc = mc;\n\t\t}\n\t},\n\n\tbeforeDatasetsDraw: function(chartInstance) {\n\t\tvar ctx = chartInstance.ctx;\n\n\t\tif (chartInstance.$zoom._dragZoomEnd) {\n\t\t\tvar xAxis = getXAxis(chartInstance);\n\t\t\tvar yAxis = getYAxis(chartInstance);\n\t\t\tvar beginPoint = chartInstance.$zoom._dragZoomStart;\n\t\t\tvar endPoint = chartInstance.$zoom._dragZoomEnd;\n\n\t\t\tvar startX = xAxis.left;\n\t\t\tvar endX = xAxis.right;\n\t\t\tvar startY = yAxis.top;\n\t\t\tvar endY = yAxis.bottom;\n\n\t\t\tif (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'x', chartInstance)) {\n\t\t\t\tvar offsetX = beginPoint.target.getBoundingClientRect().left;\n\t\t\t\tstartX = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n\t\t\t\tendX = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n\t\t\t}\n\n\t\t\tif (directionEnabled(chartInstance.$zoom._options.zoom.mode, 'y', chartInstance)) {\n\t\t\t\tvar offsetY = beginPoint.target.getBoundingClientRect().top;\n\t\t\t\tstartY = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n\t\t\t\tendY = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n\t\t\t}\n\n\t\t\tvar rectWidth = endX - startX;\n\t\t\tvar rectHeight = endY - startY;\n\t\t\tvar dragOptions = chartInstance.$zoom._options.zoom.drag;\n\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n\t\t\tctx.fillRect(startX, startY, rectWidth, rectHeight);\n\n\t\t\tif (dragOptions.borderWidth > 0) {\n\t\t\t\tctx.lineWidth = dragOptions.borderWidth;\n\t\t\t\tctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n\t\t\t\tctx.strokeRect(startX, startY, rectWidth, rectHeight);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\tdestroy: function(chartInstance) {\n\t\tif (!chartInstance.$zoom) {\n\t\t\treturn;\n\t\t}\n\t\tvar props = chartInstance.$zoom;\n\t\tvar node = props._node;\n\n\t\tnode.removeEventListener('mousedown', props._mouseDownHandler);\n\t\tnode.removeEventListener('mousemove', props._mouseMoveHandler);\n\t\tnode.ownerDocument.removeEventListener('mouseup', props._mouseUpHandler);\n\t\tnode.removeEventListener('wheel', props._wheelHandler);\n\t\tnode.removeEventListener('click', props._ghostClickHandler);\n\n\t\tdelete chartInstance.$zoom;\n\n\t\tvar mc = chartInstance._mc;\n\t\tif (mc) {\n\t\t\tmc.remove('pinchstart');\n\t\t\tmc.remove('pinch');\n\t\t\tmc.remove('pinchend');\n\t\t\tmc.remove('panstart');\n\t\t\tmc.remove('pan');\n\t\t\tmc.remove('panend');\n\t\t\tmc.destroy();\n\t\t}\n\t}\n};\n\nChart.plugins.register(zoomPlugin);\n\nreturn zoomPlugin;\n\n})));\n"]},"metadata":{},"sourceType":"script"}