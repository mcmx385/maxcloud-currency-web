{"ast":null,"code":"var _jsxFileName = \"D:\\\\Files\\\\OneDrive\\\\code\\\\lang\\\\react\\\\currency\\\\src\\\\pages\\\\Currency.js\";\nimport Nav from '../components/Nav';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { pastDate, todayDate } from '../libraries/datetime';\nimport { Button } from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Currency extends Component {\n  // Setup\n  constructor(props) {\n    super(props);\n\n    this.renderAvailable = () => {\n      return Object.keys(this.state.available).map((key, id) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: [key, \" (\", this.state.available[key], \")\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.setBase = base => {\n      this.setState({\n        base: base\n      }, () => this.updateRate());\n    };\n\n    this.setTarget = target => {\n      this.setState({\n        target: target\n      }, () => this.updateRate());\n    };\n\n    this.setAmount = amount => {\n      this.setState({\n        amount: amount !== '' ? parseInt(amount) : ''\n      }, () => this.convert());\n    };\n\n    this.convert = () => {\n      this.setState({\n        result: this.state.rate * this.state.amount\n      });\n    };\n\n    this.onSubmit = e => {\n      if (e) {\n        e.preventDefault();\n      }\n\n      this.convert();\n    };\n\n    this.getRateTS = () => {\n      const url = 'https://api.exchangerate.host/timeseries?start_date=' + this.state.start_date + '&end_date=' + this.state.end_date + '&base=' + this.state.base + '&symbols=' + this.state.target;\n      fetch(url).then(response => response.json()).then(result => {\n        this.setState({\n          timeSeries: result.rates\n        });\n      });\n    };\n\n    this.updateChart = () => {\n      const datetime = Object.keys(this.state.timeSeries);\n      const daterate = Object.values(this.state.timeSeries);\n      var arr = [];\n      datetime.map((key, id) => {\n        return arr.push(daterate[id][this.state.target]);\n      });\n      this.setState({\n        chartData: arr,\n        chartLabel: datetime\n      });\n      console.log(this.state.chartData);\n      console.log(this.state.chartLabel);\n    };\n\n    this.state = {\n      available: [],\n      base: 'HKD',\n      target: 'USD',\n      rate: 0,\n      timeSeries: [],\n      show_days: 30,\n      start_date: pastDate(30),\n      end_date: todayDate(),\n      amount: 888,\n      result: 0,\n      isLoading: false,\n      isError: false,\n      chartData: [12, 19, 3, 5, 2, 3],\n      chartLabel: ['1', '2', '3', '4', '5', '6']\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    const response = await fetch('https://openexchangerates.org/api/currencies.json');\n\n    if (response.ok) {\n      const available = await response.json();\n      this.setState({\n        available,\n        isLoading: false\n      });\n    } else {\n      this.setState({\n        isError: true,\n        isLoading: false\n      });\n    }\n\n    this.updateRate();\n    this.updateChart();\n  }\n\n  async updateRate() {\n    const url = 'https://api.exchangerate.host/convert?from=' + this.state.base + '&to=' + this.state.target;\n    const response = await fetch(url);\n\n    if (response.ok) {\n      const result = await response.json(); // console.log(result)\n\n      this.setState({\n        rate: result.result\n      }, () => this.convert()); // console.log(this.state.rate)\n\n      this.getRateTS();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Currency Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"\",\n                    children: \"Base Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"type\",\n                    id: \"\",\n                    className: \"form-control\",\n                    value: this.state.base,\n                    onChange: e => this.setBase(e.target.value),\n                    children: this.renderAvailable()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"\",\n                    children: \"Target Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"type\",\n                    id: \"\",\n                    className: \"form-control\",\n                    value: this.state.target,\n                    onChange: e => this.setTarget(e.target.value),\n                    children: this.renderAvailable()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center py-2\",\n                children: [\"Current Rate:\", ' ', this.state.rate ? this.state.rate : 'Loading...']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"\",\n                    children: \"Amount (From)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    value: this.state.amount,\n                    onChange: e => this.setAmount(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"\",\n                    children: \"Amount (To)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    value: this.state.result,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              bgcolor: \"success\",\n              submit: true,\n              text: \"Convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Past Exchange Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: this.state.chartLabel,\n              datasets: [{\n                label: 'Exchange Rate from ' + this.state.base + ' to ' + this.state.target + ' in Past ' + this.state.show_days + ' Days',\n                data: this.state.chartData,\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 0.2)'\n              }]\n            },\n            options: {\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCurrency.propTypes = {\n  amount: PropTypes.number\n};\nexport default Currency;","map":{"version":3,"sources":["D:/Files/OneDrive/code/lang/react/currency/src/pages/Currency.js"],"names":["Nav","React","Component","PropTypes","Line","pastDate","todayDate","Button","Currency","constructor","props","renderAvailable","Object","keys","state","available","map","key","id","setBase","base","setState","updateRate","setTarget","target","setAmount","amount","parseInt","convert","result","rate","onSubmit","e","preventDefault","getRateTS","url","start_date","end_date","fetch","then","response","json","timeSeries","rates","updateChart","datetime","daterate","values","arr","push","chartData","chartLabel","console","log","show_days","isLoading","isError","componentDidMount","ok","render","value","labels","datasets","label","data","fill","backgroundColor","borderColor","scales","yAxes","ticks","beginAtZero","propTypes","number"],"mappings":"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","sourcesContent":["import Nav from '../components/Nav'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Line } from 'react-chartjs-2'\nimport { pastDate, todayDate } from '../libraries/datetime'\nimport { Button } from '../components/Button'\n\nclass Currency extends Component {\n  // Setup\n  constructor(props) {\n    super(props)\n    this.state = {\n      available: [],\n      base: 'HKD',\n      target: 'USD',\n      rate: 0,\n      timeSeries: [],\n      show_days: 30,\n      start_date: pastDate(30),\n      end_date: todayDate(),\n      amount: 888,\n      result: 0,\n      isLoading: false,\n      isError: false,\n      chartData: [12, 19, 3, 5, 2, 3],\n      chartLabel: ['1','2','3','4','5','6'],\n    }\n  }\n  async componentDidMount() {\n    this.setState({ isLoading: true })\n    const response = await fetch(\n      'https://openexchangerates.org/api/currencies.json',\n    )\n    if (response.ok) {\n      const available = await response.json()\n      this.setState({ available, isLoading: false })\n    } else {\n      this.setState({ isError: true, isLoading: false })\n    }\n    this.updateRate()\n    this.updateChart()\n  }\n  renderAvailable = () => {\n    return Object.keys(this.state.available).map((key, id) => {\n      return (\n        <option value={key} key={id}>\n          {key} ({this.state.available[key]})\n        </option>\n      )\n    })\n  }\n\n  // Edit fields\n  setBase = (base) => {\n    this.setState({ base: base }, () => this.updateRate())\n  }\n  setTarget = (target) => {\n    this.setState({ target: target }, () => this.updateRate())\n  }\n  setAmount = (amount) => {\n    this.setState({ amount: amount !== '' ? parseInt(amount) : '' }, () =>\n      this.convert(),\n    )\n  }\n\n  // Update actions\n  convert = () => {\n    this.setState({ result: this.state.rate * this.state.amount })\n  }\n  onSubmit = (e) => {\n    if (e) {\n      e.preventDefault()\n    }\n    this.convert()\n  }\n  async updateRate() {\n    const url =\n      'https://api.exchangerate.host/convert?from=' +\n      this.state.base +\n      '&to=' +\n      this.state.target\n    const response = await fetch(url)\n    if (response.ok) {\n      const result = await response.json()\n      // console.log(result)\n      this.setState({ rate: result.result }, () => this.convert())\n      // console.log(this.state.rate)\n      this.getRateTS()\n    }\n  }\n  getRateTS = () => {\n    const url =\n      'https://api.exchangerate.host/timeseries?start_date=' +\n      this.state.start_date +\n      '&end_date=' +\n      this.state.end_date +\n      '&base=' +\n      this.state.base +\n      '&symbols=' +\n      this.state.target\n    fetch(url)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({ timeSeries: result.rates })\n      })\n  }\n  updateChart = () => {\n    const datetime = Object.keys(this.state.timeSeries)\n    const daterate = Object.values(this.state.timeSeries)\n    var arr = []\n    datetime.map((key, id) => {\n      return arr.push(daterate[id][this.state.target])\n    })\n    this.setState({ chartData: arr, chartLabel: datetime })\n    console.log(this.state.chartData)\n    console.log(this.state.chartLabel)\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"container p-4\">\n          <div className=\"card p-4\">\n            <h3>Currency Converter</h3>\n            <form action=\"\" onSubmit={this.onSubmit}>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Base Currency</label>\n                    <select\n                      name=\"type\"\n                      id=\"\"\n                      className=\"form-control\"\n                      value={this.state.base}\n                      onChange={(e) => this.setBase(e.target.value)}\n                    >\n                      {this.renderAvailable()}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Target Currency</label>\n                    <select\n                      name=\"type\"\n                      id=\"\"\n                      className=\"form-control\"\n                      value={this.state.target}\n                      onChange={(e) => this.setTarget(e.target.value)}\n                    >\n                      {this.renderAvailable()}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col text-center py-2\">\n                  Current Rate:{' '}\n                  {this.state.rate ? this.state.rate : 'Loading...'}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Amount (From)</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      value={this.state.amount}\n                      onChange={(e) => this.setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Amount (To)</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      value={this.state.result}\n                      disabled\n                    />\n                  </div>\n                </div>\n              </div>\n              <Button bgcolor=\"success\" submit={true} text=\"Convert\" />\n            </form>\n            <hr />\n            <h3>Past Exchange Rate</h3>\n            <Line\n              data={{\n                labels: this.state.chartLabel,\n                datasets: [\n                  {\n                    label:\n                      'Exchange Rate from ' +\n                      this.state.base +\n                      ' to ' +\n                      this.state.target +\n                      ' in Past ' +\n                      this.state.show_days +\n                      ' Days',\n                    data: this.state.chartData,\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                  },\n                ],\n              }}\n              options={{\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n            {/* {this.updateChart()} */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nCurrency.propTypes = {\n  amount: PropTypes.number,\n}\n\nexport default Currency\n"]},"metadata":{},"sourceType":"module"}