{"version":3,"sources":["components/Nav.js","components/Button.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Header.js","pages/TaskList.js","pages/About.js","pages/NotFound.js","pages/Users.js","pages/Index.js","pages/RandUser.js","libraries/datetime.js","components/Dropdown.js","pages/Currency.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","tabIndex","aria-disabled","placeholder","defaultProps","Button","onClick","bgcolor","float","submit","text","Task","task","onDelete","onToggle","reminder","onDoubleClick","style","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","Text","alert","htmlFor","value","onChange","target","checked","currentTarget","Header","showAdd","TaskList","showAddTask","setShowAddTask","setTasks","el","console","log","Math","floor","random","newTask","length","filter","About","NotFound","Users","user","idx","Index","to","RandUser","renderTableHeader","Object","keys","state","users","attr","toUpperCase","renderTableRows","name","username","email","address","street","city","phone","website","company","isLoading","isError","a","this","setState","fetch","response","ok","json","Component","getDate","date_obj","current_date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","pastDate","days","today","Date","past","setDate","Dropdown","selected","data","key","Currency","renderAvailable","available","setBase","base","updateRate","setTarget","setAmount","amount","parseInt","convert","setShowDays","start_date","show_days","getRateTS","result","rate","url","end_date","then","timeSeries","rates","updateChart","datetime","daterate","values","arr","push","chartData","chartLabel","action","disabled","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","App","exact","path","component","CurrencyPage","IndexPage","TaskListPage","AboutPage","UsersPage","RandUserPage","NotFoundPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9928df0.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Nav = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"/#\">\n        {props.title}\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"/#\">\n              Home <span className=\"sr-only\">(current)</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/about\">\n              About\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/users\">\n              Users\n            </a>\n          </li>\n          <li className=\"nav-item dropdown\">\n            <a\n              className=\"nav-link dropdown-toggle\"\n              href=\"/#\"\n              id=\"navbarDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Dropdown\n            </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <a className=\"dropdown-item\" href=\"/#\">\n                Action\n              </a>\n              <a className=\"dropdown-item\" href=\"/#\">\n                Another action\n              </a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/#\">\n                Something else here\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link disabled\"\n              href=\"/#\"\n              tabIndex=\"-1\"\n              aria-disabled=\"true\"\n            >\n              Disabled\n            </a>\n          </li>\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n    </nav>\n  )\n}\n\nNav.defaultProps = {\n  title: 'App',\n}\n\nNav.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// const headingStyle = {\n//   color:'red',\n//   backgroundColor:'black'\n// }\n\nexport default Nav\n","import PropTypes from 'prop-types'\n\nexport const Button = (props) => {\n  return (\n    <button\n      onClick={props.onClick}\n      className={`btn${props.bgcolor && ' btn-' + props.bgcolor}${\n        props.float ? ' float-' + props.float : ''\n      }`}\n      type={props.submit ? 'submit' : 'button'}\n    >\n      {props.text}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  bgcolor: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task card p-3 ${task.reminder ? 'bg-info' : 'bg-white'}`}\n      onDoubleClick={() => onToggle(task.id)}\n      style={{ cursor: 'pointer' }}\n    >\n      <h3>\n        {task.text}{' '}\n        <FaTimes\n          className=\"float-right\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (!Text) {\n      alert('Please input task name')\n      return\n    }\n    onAdd({ text, day, reminder })\n\n    setText('')\n    setDay('')\n    setReminder('')\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"\">Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          className=\"form-control\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"\">Datetime</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Datetime\"\n          className=\"form-control\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <label htmlFor=\"\">Reminder</label>\n          </div>\n          <div className=\"col\">\n            <input\n              type=\"checkbox\"\n              placeholder=\"Add Reminder\"\n              checked={reminder}\n              value={reminder}\n              onChange={(e) => setReminder(e.currentTarget.checked)}\n            />\n          </div>\n        </div>\n      </div>\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  )\n}\nexport default AddTask\n","import Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <div>\n      <h2>\n        {title}\n        <Button\n          text={showAdd ? 'X' : 'Add'}\n          bgcolor={showAdd ? 'danger' : 'info'}\n          float=\"right\"\n          onClick={onAdd}\n        />\n      </h2>\n    </div>\n  )\n}\nexport default Header\n","import Nav from '../components/Nav'\nimport Button from '../components/Button'\nimport Tasks from '../components/Tasks'\nimport { useState } from 'react'\nimport AddTask from '../components/AddTask'\nimport Header from '../components/Header'\n\nconst TaskList = () => {\n  const name = 'Max'\n  const x = true\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const onClick = (el) => {\n    console.log(el)\n  }\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'A',\n      day: '2020-01-25',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'B',\n      day: '2020-05-25',\n      reminder: false,\n    },\n    {\n      id: 3,\n      text: 'C',\n      day: '2019-05-25',\n      reminder: false,\n    },\n  ])\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id\n          ? {\n              ...task,\n              reminder: !task.reminder,\n            }\n          : task,\n      ),\n    )\n  }\n\n  return (\n    <div>\n      <Nav title=\"CurrencyApp\" />\n      <div className=\"container\">\n        <h1>Hello world</h1>\n        <h2>\n          Hello {name} {1 + 1}\n        </h2>\n        {x ? 'Yes' : 'No'}\n        <br />\n        <button className=\"btn btn-primary\">Press</button>\n        <Button onClick={onClick} bgcolor=\"success\" text=\"submit\" />\n        <Header\n          title=\"Task Tracker\"\n          showAdd={showAddTask}\n          onAdd={() => setShowAddTask(!showAddTask)}\n        />\n        {showAddTask && <AddTask onAdd={addTask} />}\n        <br />\n        {tasks.length > 0 ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          'Nothing'\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default TaskList\n","import Nav from '../components/Nav'\nconst About = () => {\n  return (\n    <div>\n      <Nav title=\"CurrencyApp\" />\n      <div className=\"container\">\n        <h2>About Us</h2>\n        <p>Made by Tam Ching Lung</p>\n      </div>\n    </div>\n  )\n}\nexport default About\n","const NotFound = () => {\n  return (\n    <div className='text-center'>\n      <h2> 404 Not Found </h2>\n      ...things\n    </div>\n  )\n}\nexport default NotFound\n","import Nav from \"../components/Nav\"\n\nconst Users = () => {\n  return (\n    <div>\n        <Nav title='Users Page'/>\n      <ul>\n        {['A', 'B', 'C', 'D', 'E', 'F', 'G'].map((user, idx) => {\n          return <li key={idx}>{user}</li>\n        })}\n      </ul>\n      ...\n    </div>\n  )\n}\nexport default Users\n","import Nav from '../components/Nav'\nimport { Link } from 'react-router-dom'\n\nconst Index = () => {\n  return (\n    <div>\n      <Nav title=\"CurrencyApp\" />\n      <div className=\"container\">\n        <h2>Title</h2>\n        ... things\n        <br/>\n        <Link to=\"/about\" className='btn btn-primary'> Go To About</Link>\n      </div>\n    </div>\n  )\n}\nexport default Index\n","import React, { Component } from 'react'\nimport Nav from '../components/Nav'\n\nclass RandUser extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      isLoading: false,\n      isError: false,\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true })\n    const response = await fetch('http://jsonplaceholder.typicode.com/users')\n    if (response.ok) {\n      const users = await response.json()\n      this.setState({ users, isLoading: false })\n      //   console.log(users)\n    } else {\n      this.setState({ isError: true, isLoading: false })\n    }\n  }\n\n  renderTableHeader = () => {\n    return Object.keys(this.state.users[0]).map((attr) => (\n      <th key={attr}>{attr.toUpperCase()}</th>\n    ))\n  }\n  renderTableRows = () => {\n    return this.state.users.map((user) => {\n      return (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.name}</td>\n          <td>{user.username}</td>\n          <td>{user.email}</td>\n          <td>{`${user.address.street}, ${user.address.city}`}</td>\n          <td>{user.phone}</td>\n          <td>{user.website}</td>\n          <td>{user.company.name}</td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    const { users, isLoading, isError } = this.state\n    if (isLoading) {\n      return <div>Loading...</div>\n    }\n    if (isError) {\n      return <div>Error...</div>\n    }\n    return (\n      <div>\n        <Nav />\n        <div className=\"container\">\n          {users.length > 0 ? (\n            <table className=\"table table-sm table-striped table-bordered\">\n              <thead>\n                <tr>{this.renderTableHeader()}</tr>\n              </thead>\n              <tbody>{this.renderTableRows()}</tbody>\n            </table>\n          ) : (\n            <div>No users</div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\nexport default RandUser\n","export const getDate = (date_obj) => {\n    var current_date = date_obj\n    var dd = String(current_date.getDate()).padStart(2, '0')\n    var mm = String(current_date.getMonth() + 1).padStart(2, '0') //January is 0!\n    var yyyy = current_date.getFullYear()\n\n    current_date = yyyy + '-' + mm + '-' + dd\n    return current_date\n}\nexport const todayDate = () => {\n    return getDate(new Date())\n}\nexport const pastDate = (days) => {\n    const today = new Date()\n    const past = new Date(today)\n    past.setDate(past.getDate() - days)\n    return getDate(past)\n}","const Dropdown = ({ name, selected, onChange, id, data }) => {\n  const options = () => {\n    return Object.keys(data).map((key, idx) => {\n      return (\n        <option value={key} key={idx}>\n          {key} ({data[key]})\n        </option>\n      )\n    })\n  }\n  return (\n    <select\n      name={name}\n      id={id}\n      className=\"form-control\"\n      value={selected}\n      onChange={(e) => onChange(e.target.value)}\n    >\n      {options()}\n    </select>\n  )\n}\nexport default Dropdown\n","import Nav from '../components/Nav'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Line } from 'react-chartjs-2'\nimport { pastDate, todayDate } from '../libraries/datetime'\nimport { Button } from '../components/Button'\nimport Dropdown from '../components/Dropdown'\n\nclass Currency extends Component {\n  // Setup\n  constructor(props) {\n    super(props)\n    this.state = {\n      available: [],\n      base: 'HKD',\n      target: 'USD',\n      rate: 0,\n      timeSeries: [],\n      show_days: 30,\n      start_date: pastDate(30),\n      end_date: todayDate(),\n      amount: 888,\n      result: 0,\n      isLoading: false,\n      isError: false,\n      chartData: [],\n      chartLabel: [],\n    }\n  }\n  async componentDidMount() {\n    this.setState({ isLoading: true })\n    const response = await fetch(\n      'https://openexchangerates.org/api/currencies.json',\n    )\n    if (response.ok) {\n      const available = await response.json()\n      this.setState({ available, isLoading: false }, () => this.updateRate())\n    } else {\n      this.setState({ isError: true, isLoading: false })\n    }\n  }\n  renderAvailable = () => {\n    return Object.keys(this.state.available).map((key, id) => {\n      return (\n        <option value={key} key={id}>\n          {key} ({this.state.available[key]})\n        </option>\n      )\n    })\n  }\n\n  // Edit fields\n  setBase = (base) => {\n    this.setState({ base: base }, () => this.updateRate())\n  }\n  setTarget = (target) => {\n    this.setState({ target: target }, () => this.updateRate())\n  }\n  setAmount = (amount) => {\n    this.setState({ amount: amount !== '' ? parseInt(amount) : '' }, () =>\n      this.convert(),\n    )\n  }\n  setShowDays = (days) => {\n    const start_date = pastDate(days)\n    this.setState({ show_days: days, start_date }, () => this.getRateTS())\n  }\n\n  // Update actions\n  convert = () => {\n    this.setState({ result: this.state.rate * this.state.amount })\n  }\n  onSubmit = (e) => {\n    if (e) {\n      e.preventDefault()\n    }\n    this.convert()\n  }\n  async updateRate() {\n    const url =\n      'https://api.exchangerate.host/convert?from=' +\n      this.state.base +\n      '&to=' +\n      this.state.target\n    const response = await fetch(url)\n    if (response.ok) {\n      const result = await response.json()\n      this.setState({ rate: result.result }, () => {\n        this.convert()\n        this.getRateTS()\n      })\n    }\n  }\n  getRateTS = () => {\n    const url =\n      'https://api.exchangerate.host/timeseries?start_date=' +\n      this.state.start_date +\n      '&end_date=' +\n      this.state.end_date +\n      '&base=' +\n      this.state.base +\n      '&symbols=' +\n      this.state.target\n    fetch(url)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({ timeSeries: result.rates }, () => this.updateChart())\n      })\n  }\n  updateChart = () => {\n    const datetime = Object.keys(this.state.timeSeries)\n    const daterate = Object.values(this.state.timeSeries)\n    var arr = []\n    datetime.map((key, id) => {\n      return arr.push(daterate[id][this.state.target])\n    })\n    this.setState({ chartData: arr, chartLabel: datetime })\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav title=\"CurrencyApp\" />\n        <div className=\"container p-4\">\n          <div className=\"card p-4\">\n            <h3>Currency Converter</h3>\n            <form action=\"\" onSubmit={this.onSubmit}>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Base Currency</label>\n                    <Dropdown\n                      name=\"type\"\n                      selected={this.state.base}\n                      onChange={this.setBase}\n                      data={this.state.available}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-6\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Target Currency</label>\n                    <Dropdown\n                      name=\"type\"\n                      selected={this.state.target}\n                      onChange={this.setTarget}\n                      data={this.state.available}\n                    />\n                  </div>\n                </div>\n                <div className=\"col text-center py-2\">\n                  Current Rate:{' '}\n                  {this.state.rate ? this.state.rate : 'Loading...'}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Amount (From)</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      value={this.state.amount}\n                      onChange={(e) => this.setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">Amount (To)</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      value={this.state.result}\n                      disabled\n                    />\n                  </div>\n                </div>\n              </div>\n              <Button bgcolor=\"success\" submit={true} text=\"Convert\" />\n            </form>\n            <hr />\n            <div className=\"row\">\n              <div className=\"col\">\n                <h3>Past Exchange Rate</h3>\n              </div>\n              <div className=\"col\">\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={this.state.show_days}\n                    onChange={(e) => this.setShowDays(e.target.value)}\n                  />\n                  <span className=\"input-group-text\" id=\"basic-addon2\">\n                    Days\n                  </span>\n                </div>\n              </div>\n            </div>\n            <Line\n              data={{\n                labels: this.state.chartLabel,\n                datasets: [\n                  {\n                    label:\n                      'Exchange Rate from ' +\n                      this.state.base +\n                      ' to ' +\n                      this.state.target +\n                      ' in Past ' +\n                      this.state.show_days +\n                      ' Days',\n                    data: this.state.chartData,\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                  },\n                ],\n              }}\n              options={{\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nCurrency.propTypes = {\n  amount: PropTypes.number,\n}\n\nexport default Currency\n","import './App.css'\nimport React, { Component } from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  // Link,\n  Redirect,\n} from 'react-router-dom'\n\nimport TaskListPage from './pages/TaskList'\nimport AboutPage from './pages/About'\nimport NotFoundPage from './pages/NotFound'\nimport UsersPage from './pages/Users'\nimport IndexPage from './pages/Index'\nimport RandUserPage from './pages/RandUser'\nimport CurrencyPage from './pages/Currency'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={CurrencyPage} />\n          <Route exact path=\"/index\" component={IndexPage} />\n          <Route exact path=\"/tasks\" component={TaskListPage} />\n          <Route exact path=\"/about\" component={AboutPage} />\n          <Route exact path=\"/users\" component={UsersPage} />\n          <Route exact path=\"/randusers\" component={RandUserPage} />\n          <Route exact path=\"/currency\" component={CurrencyPage} />\n          <Route exact path=\"/404\" component={NotFoundPage} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}